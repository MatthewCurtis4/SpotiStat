{"version":3,"sources":["components/navbar.js","App.js","registerServiceWorker.js","index.js","getArtist.js"],"names":["NavBar","id","Fragment","class","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-haspopup","aria-labelledby","Component","spotifyApi","SpotifyWebApi","App","params","getHashParams","access_token","setAccessToken","state","loggedIn","nowPlaying","name","albumArt","artiststate","list","e","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","getMyCurrentPlaybackState","then","response","setState","item","image","album","images","url","getUserPlaylists","Playlists","items","getArtist","data","err","console","error","getArtistTopTracks","body","log","tracks","forEach","track","index","popularity","catch","message","getMyTopTracks","TopArtists","searchArtists","limit","value","require","topLove","document","getElementById","innerHTML","T_range","getMyTopArtists","time_range","top","className","this","onClick","testTopArtists","testTopTracks","src","style","height","getNowPlaying","getTopTracks","medium_term","Getplaylists","GetArtists","getTopTracksCONSOLE","test","load","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","URL","process","origin","addEventListener","fetch","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","result","push","concat","JSON","stringify","newlist","join","replace","artists","multiply","a","b"],"mappings":"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","file":"static/js/main.f5e95091.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n \r\nclass NavBar extends Component {\r\n  render() {\r\n    return (\r\n        <div id=\"wrapper\">\r\n      <React.Fragment>\r\n\t<nav class=\"navbar navbar-expand-md  fixed-top transparent\" id=\"nav1\">\r\n\t\t<div class=\"container\">\r\n\t\t\t<a class=\"navbar-brand\" href=\"index.html\">MC Curtis</a>\r\n\t\t\t<button class=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\"\r\n\t\t\t\taria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n\t\t\t\t<span class=\"navbar-toggler-icon\"></span>\r\n\t\t\t</button>\r\n\t\t\t<div class=\"collapse navbar-collapse justify-content-end\" id=\"collapsibleNavId\">\r\n\t\t\t\t<ul class=\"nav\">\r\n\t\t\t\t\t<li class=\"nav-item active\">\r\n\t\t\t\t\t\t<a class=\"nav-link\" href=\"theintro.html\">The Intro <span class=\"sr-only\">(current)</span></a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t\t\t<a class=\"nav-link\" href=\"Benjis.html\">Benjis</a>\r\n                    </li>\r\n\t\t\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t\t\t<a class=\"nav-link\" href=\"FreezeUp.html\">Freeze Up</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t\t\t<a class=\"nav-link\" href=\"UCU.html\">UCU</a>\r\n\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t\t\t<a class=\"nav-link\" href=\"Socials.html\">Socials</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t\t\t<a class=\"nav-link btn btn-outline-secondary\" href=\"Contact.html\">Contact</a>\r\n\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t\t<li class=\"nav-item dropdown\">\r\n\t\t\t\t\t\t<a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdownId\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Full Distography Links</a>\r\n\t\t\t\t\t\t<div class=\"dropdown-menu\" aria-labelledby=\"dropdownId\">\r\n\t\t\t\t\t\t\t<a class=\"dropdown-item\" href=\"FWTV.html\">Fuck With the Vision</a>\r\n\t\t\t\t\t\t\t<a class=\"dropdown-item\" href=\"MakeAMill.html\">Make a Mill</a>\r\n\t\t\t\t\t\t\t<a class=\"dropdown-item\" href=\"LiquorFlowin.html\">Keep the Liquor Flowin'</a>\r\n\t\t\t\t\t\t\t<a class=\"dropdown-item\" href=\"LoudThatISmoke.html\">Loud That I Smoke</a>\r\n\t\t\t\t\t\t\t<a class=\"dropdown-item\" href=\"FreestyleHenny.html\">Freestyle Henny</a>\r\n\t\t\t\t\t\t\t<a class=\"dropdown-item\" href=\"Sick.html\">Sick When You Do That Remix</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</li>\r\n                    </li>\r\n\t\t\t\t    </ul>\r\n\t\t\t    </div>\r\n\r\n\t\t    </div>\r\n\t\t\r\n        </nav>\r\n      </React.Fragment>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default NavBar;","import React, { Component } from 'react';\nimport './App.css';\n\nimport NavBar from './components/navbar';\n\n/* eslint-disable */\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nconst spotifyApi = new SpotifyWebApi();\nvar playlists = [];\n/*\n\nimport {Navigation} from './Navigation';\nimport Button from 'react-bootstrap/Button';\n(function() {\n  (\"#includedContent\").load(\"./navbasic.html\"); \n  });\n  {\n    document.write(\"navbasic.html\");\n    }\nsrc=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js\" \nintegrity=\"sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4\" \ncrossorigin=\"anonymous\">\n*/\n//var getArtist = require('./getArtist');\n//console.log(typeof GetArtist.testTopArtists); // => 'function'\n//console.log(typeof getArtist.bar); // => 'function'\n//console.log(typeof tools.zemba); // => undefined\n\nclass App extends Component {\n  constructor(){\n    super();\n    const params = this.getHashParams();\n    if (params.access_token) {\n      spotifyApi.setAccessToken(params.access_token);\n  }\n    this.state = {\n      loggedIn: params.access_token ? true : false,\n      nowPlaying: { name: 'Not Checked', albumArt: '' }\n\n    }\n    this.artiststate = {\n      loggedIn: params.access_token ? true : false,\n    }\n    this.list = [];\n  }\n  \n  getHashParams() {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n       hashParams[e[1]] = decodeURIComponent(e[2]);\n       e = r.exec(q);\n    }\n    return hashParams;\n  }\n\n  getNowPlaying(){\n    spotifyApi.getMyCurrentPlaybackState()\n      .then((response) => {\n        this.setState({\n          nowPlaying: { \n              name: response.item.name, \n              image: response.item.album.images[0].url\n            }\n        });\n      })\n  }\n  Getplaylists(){\n    spotifyApi\n      .getUserPlaylists()\n      .then((response) => {\n        this.setState({\n          Playlists: { \n              name : response.items[0].name\n            }\n          });\n        })\n    }\n\n      /*  \n        function (data) {\n          self.playlists.push(console.log(data));\n        },\n        function (err) {\n          console.error(err);\n        }\n        */\n      GetArtists(){\n      spotifyApi.getArtist('2hazSY4Ef3aB9ATXW7F5w3').then(\n        function (data) {\n          //this.setState({topArtist: data})\n          //console.log('User playlists', data);\n        },\n        function (err) {\n          console.error(err);\n        }\n      );\n      }\n  topforperson(){\n    spotifyApi\n    .getArtistTopTracks()\n    .then(function(data) {\n      // Set the access token on the API object so that it's used in all future requests\n      spotifyApi.setAccessToken(data.body['access_token']);\n  \n      // Get the most popular tracks by David Bowie in Great Britain\n      return spotifyApi.getArtistTopTracks('0oSGxfWSnnOXhD2fKuz2Gy', 'GB');\n    })\n    .then(function(data) {\n      console.log('The most popular tracks for David Bowie is..');\n      console.log('Drum roll..');\n      console.log('...');\n  \n      /*\n       * 1. Space Oddity - 2009 Digital Remaster (popularity is 51)\n       * 2. Heroes - 1999 Digital Remaster (popularity is 33)\n       * 3. Let's Dance - 1999 Digital Remaster (popularity is 20)\n       * 4. ...\n      */\n      data.body.tracks.forEach(function(track, index) {\n        console.log(\n          index +\n            1 +\n            '. ' +\n            track.name +\n            ' (popularity is ' +\n            track.popularity +\n            ')'\n        );\n      });\n    })\n    .catch(function(err) {\n      console.log('Unfortunately, something has gone wrong.', err.message);\n    });}\n  getTopTracks(){\n    spotifyApi.getMyTopTracks()\n    .then((response) => {\n      this.setState({\n        TopArtists: { \n          name: response.items[0].album.name, \n          popularity: response.items[0].popularity\n        }\n      });\n    })\n  }\n\n  getTopTracksCONSOLE(){\n    spotifyApi.getArtistTopTracks('0oSGxfWSnnOXhD2fKuz2Gy', 'GB').then(function(data) {\n      console.log('The most popular tracks for David Bowie is..');\n      console.log('Drum roll..');\n      console.log('...');\n\n      //data.body.tracks.forEach(function(track, index) {\n        //console.log(\n        //  index +\n        //    1 +\n        //    '. ' +\n        //    track.name +\n        //    ' (popularity is ' +\n        //    track.popularity +\n         //   ')'\n       // );\n     // });\n    });}\n  \n    test () {\n        spotifyApi.searchArtists('Love', {limit:15}).then(\n          function (data) { \n            var tools = require('./getArtist.js');\n            var value = tools.topLove(data);\n            //console.log(value);\n            //console.log(tools.multiply(5,4));\n            //var returnResult = sample1(\"SampleString\");\n            document.getElementById('results').innerHTML = value ;\n      });\n      }\n/*\ntesTopArtists () {\n  var list = [];\n  var string = \"\";\n  spotifyApi.getMyTopArtists({limit:30, time_range:medium_term}).then(\n    function (data) {\n      data.items.forEach(function (track, index) {\n        list.push(index+1 + \" \");\n        list.push(track.name);\n        list.push(\"<br>\");\n        console.log(track.name);\n        console.log(index+1);\n        string.concat(track.name);\n        //string.concat(\"<br>\");\n        //var brk = list.split(',');\n        var neww = JSON.stringify(list);\n        //var res = brk.join(\" <br> \");\n\n       // document.write(track.name);\n       //var result = list.replace(\",\", \"\");\n       var newlist = list.join(\",\");\n       var result = newlist.replace(/,/g, '');\n        // Removing all the commas\n        document.getElementById('TopArtists').innerHTML = result ;\n        //document.write(\"  \\n\");\n        //document.body.innerHTML = \"<h1>Today's date is \" + track.name + \"</h1>\"\n        //list.push(\"\\n\");\n        console.log(result);\n        //console.log(string);\n      }\n  )\n    },\n    function (err) {\n      console.error(err);\n    }\n  );\n\n\n  //JSON.stringify(list);\n  var energy = list.join();\n  //list.join();\n  //list.split(',').join(\"<br />\");\n  console.log(energy);\n  var x = list.toString();\n  console.log(x);\nthis.setState({\n  UsersTopArtists: { \n    name: x\n  }\n});\n\n}\n*/\ntestTopArtists(T_range){\n  spotifyApi.getMyTopArtists({limit:20, time_range:T_range}).then(\n    function (data) { \n      var tools = require('./getArtist.js');\n      var value = tools.top(data);\n      //console.log(value);\n      //console.log(tools.multiply(5,4));\n      //var returnResult = sample1(\"SampleString\");\n      document.getElementById('TopArtists').innerHTML = value ;\n});\n}\n\ntestTopTracks(T_range){\n  spotifyApi.getMyTopTracks({limit:20, time_range:T_range}).then(\n    function (data) { \n      var tools = require('./getArtist.js');\n      var value = tools.top(data);\n      //console.log(value);\n      //console.log(tools.multiply(5,4));\n      //var returnResult = sample1(\"SampleString\");\n      document.getElementById('TopTracks').innerHTML = value ;\n});\n}\n\n\n/*\n  ordertop(response){\n    while (this.state.TopArtists.name.items[i] != null){\n      list.push(this.state.TopArtists.name.items[i].name) \n    }\n      var x = list.toString();\n      return x\n  }\n  */\n  render() {\n    return (\n/* Will not let me comment in rend */\n<React.Fragment>\n        <NavBar/>\n<div className=\"App\">\n\n\n<h1><b>Welcome to SpotiStat</b></h1>\n  \n  <a href='http://localhost:8888' ><b className=\"Darker\"><u>Click Here to Login to Spotify</u></b> </a>\n  <h3><b>Want To See Your Top Streamed Artists?</b></h3>\n  <h4><b>Select a Time Range</b></h4>\n  <div className=\"row\">\n          <div className=\"col\">\n          { this.state.loggedIn &&\n    <button onClick={() => this.testTopArtists(\"short_term\")}>\n      Past Month\n    </button>}\n          </div>\n          <div className=\"col\">\n          { this.state.loggedIn &&\n    <button onClick={() => this.testTopArtists(\"medium_term\")}>\n      Past 6 Months\n    </button>}\n          </div>\n          <div className=\"col\">\n          { this.state.loggedIn &&\n    <button onClick={() => this.testTopArtists(\"long_term\")}>\n      All Time\n    </button>}\n          </div>        \n      </div>\n\n      <div id=\"TopArtists\"></div>\n\n      <h3><b>Want To See Your Top Streamed Artists?</b></h3>\n  <h4><b>Select a Time Range</b></h4>\n  <div className=\"row\">\n          <div className=\"col\">\n          { this.state.loggedIn &&\n    <button onClick={() => this.testTopTracks(\"short_term\")}>\n      Past Month\n    </button>}\n          </div>\n          <div className=\"col\">\n          { this.state.loggedIn &&\n    <button onClick={() => this.testTopTracks(\"medium_term\")}>\n      Past 6 Months\n    </button>}\n          </div>\n          <div className=\"col\">\n          { this.state.loggedIn &&\n    <button onClick={() => this.testTopTracks(\"long_term\")}>\n      All Time\n    </button>}\n          </div>        \n      </div>\n\n            <div id=\"results\"></div>\n\n\n     \n     <div id=\"TopTracks\"></div>\n\n\n        <div>\n          <img src={this.state.nowPlaying.image} style={{ height: 150 }}/>\n        </div>\n        { this.state.loggedIn &&\n          <button onClick={() => this.getNowPlaying()}>\n            Check Now Playing\n          </button>\n        }\n        { this.state.loggedIn &&\n          <button onClick={() => this.getTopTracks(medium_term)}>\n            Top Tracks\n          </button>\n  }\n          { this.state.loggedIn &&\n          <button onClick={() => this.Getplaylists()}>\n            Get Playlists\n          </button>}\n          { this.state.loggedIn &&\n          <button onClick={() => this.GetArtists()}>\n            Get Artist\n          </button>}\n\n          { this.state.loggedIn &&\n          <button onClick={() => this.getTopTracksCONSOLE()}>\n            Get top for person\n          </button>}\n\n          { this.state.loggedIn &&\n          <button onClick={() => this.test()}>\n            test\n          </button>}\n\n          { this.state.loggedIn &&\n          <button onClick={() => this.testTopArtists()}>\n            test Top Artists\n          </button>}\n      </div>\n      </React.Fragment>\n      );\n  /*\n  use \n      <Switch>\n            Route path='/whatever' component={whatever}/>\n    </Switch>\n    in the return statement if you have a sub folder components with .js\n    file in it all all that is above that switch will stay on page even at switch\n\n\n*/    \n  };\n  function() {\n    (\"#includedContent\").load(\"./navbasic.html\"); \n    };\n\n}\n\n        /*\n          <div>\n                Your Top Artists are: { this.state.topArtists.name }\n          </div>\n\n          <div>\n                Top love: {this.state.Artiststuff.name.forEach(function (track) \n                { track.name;} )}\n          </div>\n          */\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n//import NavBar from './components/header/navBar';\n//ReactDOM.render(<NavBar/>, document.getElementById('navBar'));\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","\r\n\r\n\r\n\r\nmodule.exports = {\r\n  top: function(data){ \r\nvar list = [];\r\nvar string = \"\";\r\nvar result;\r\n  data.items.forEach(function (track, index) {\r\n    list.push(index+1 + \" \");\r\n    list.push(track.name);\r\n    list.push(\"<br>\");\r\n    //console.log(track.name);\r\n    //console.log(index+1);\r\n    string.concat(track.name);\r\n    //string.concat(\"<br>\");\r\n    //var brk = list.split(',');\r\n    var neww = JSON.stringify(list);\r\n    //var res = brk.join(\" <br> \");\r\n\r\n   // document.write(track.name);\r\n   //var result = list.replace(\",\", \"\");\r\n   var newlist = list.join(\",\");\r\n   result = newlist.replace(/,/g, '');\r\n    // Removing all the commas\r\n    console.log(result);\r\n\r\n\r\n    console.log(result);\r\n    //document.write(\"  \\n\");\r\n    //document.body.innerHTML = \"<h1>Today's date is \" + track.name + \"</h1>\"\r\n    //list.push(\"\\n\");\r\n    console.log(result);\r\n    //console.log(string);\r\n  }\r\n)\r\nreturn result;\r\n},\r\ntopLove: function(data){ \r\n  var list = [];\r\n  var string = \"\";\r\n  var result;\r\n  data.artists.items.forEach(function (track, index) {\r\n      list.push(index+1 + \" \");\r\n      list.push(track.name);\r\n      list.push(\"<br>\");\r\n      //console.log(track.name);\r\n      //console.log(index+1);\r\n      string.concat(track.name);\r\n      //string.concat(\"<br>\");\r\n      //var brk = list.split(',');\r\n      var neww = JSON.stringify(list);\r\n      //var res = brk.join(\" <br> \");\r\n  \r\n     // document.write(track.name);\r\n     //var result = list.replace(\",\", \"\");\r\n     var newlist = list.join(\",\");\r\n     result = newlist.replace(/,/g, '');\r\n      // Removing all the commas\r\n      console.log(result);\r\n  \r\n  \r\n      console.log(result);\r\n      //document.write(\"  \\n\");\r\n      //document.body.innerHTML = \"<h1>Today's date is \" + track.name + \"</h1>\"\r\n      //list.push(\"\\n\");\r\n      console.log(result);\r\n      //console.log(string);\r\n    }\r\n  )\r\n  return result;\r\n  },\r\n  multiply: function(a,b) { \r\n    return a*b\r\n  }\r\n};\r\n//export default function  TTopArtists();\r\n/*\r\nvar TTopArtists = function(data){ \r\n  var list = [];\r\n  var string = \"\";\r\n      data.items.forEach(function (track, index) {\r\n        list.push(index+1 + \" \");\r\n        list.push(track.name);\r\n        list.push(\"<br>\");\r\n        //console.log(track.name);\r\n        //console.log(index+1);\r\n        string.concat(track.name);\r\n        //string.concat(\"<br>\");\r\n        //var brk = list.split(',');\r\n        var neww = JSON.stringify(list);\r\n        //var res = brk.join(\" <br> \");\r\n\r\n       // document.write(track.name);\r\n       //var result = list.replace(\",\", \"\");\r\n       var newlist = list.join(\",\");\r\n       var result = newlist.replace(/,/g, '');\r\n        // Removing all the commas\r\n        console.log(result);\r\n        return result;\r\n\r\n        console.log(result);\r\n        //document.write(\"  \\n\");\r\n        //document.body.innerHTML = \"<h1>Today's date is \" + track.name + \"</h1>\"\r\n        //list.push(\"\\n\");\r\n        console.log(result);\r\n        //console.log(string);\r\n      }\r\n  )\r\n}\r\n\r\nmodule.export = TTopArtists;\r\n*/\r\n/*\r\nTTopArtists () ;{\r\n  var list = [];\r\n  var string = \"\";\r\n  spotifyApi.getMyTopArtists({limit:20}).then(\r\n    function (data) {\r\n      data.items.forEach(function (track, index) {\r\n        list.push(index+1 + \" \");\r\n        list.push(track.name);\r\n        list.push(\"<br>\");\r\n        console.log(track.name);\r\n        console.log(index+1);\r\n        string.concat(track.name);\r\n        //string.concat(\"<br>\");\r\n        //var brk = list.split(',');\r\n        var neww = JSON.stringify(list);\r\n        //var res = brk.join(\" <br> \");\r\n\r\n       // document.write(track.name);\r\n       //var result = list.replace(\",\", \"\");\r\n       var newlist = list.join(\",\");\r\n       var result = newlist.replace(/,/g, '');\r\n        // Removing all the commas\r\n        return result;\r\n        //document.getElementById('TopArtists').innerHTML = result ;\r\n        //document.write(\"  \\n\");\r\n        //document.body.innerHTML = \"<h1>Today's date is \" + track.name + \"</h1>\"\r\n        //list.push(\"\\n\");\r\n        console.log(result);\r\n        //console.log(string);\r\n      }\r\n  )\r\n    },\r\n    function (err) {\r\n      console.error(err);\r\n    }\r\n  );\r\n\r\n\r\n  //JSON.stringify(list);\r\n  var energy = list.join();\r\n  //list.join();\r\n  //list.split(',').join(\"<br />\");\r\n  console.log(energy);\r\n  var x = list.toString();\r\n  console.log(x);\r\nthis.setState({\r\n  UsersTopArtists: { \r\n    name: x\r\n  }\r\n});\r\n\r\n}\r\n*/"],"sourceRoot":""}